/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   columns.c                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: dromansk <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/02/21 22:21:24 by dromansk          #+#    #+#             */
/*   Updated: 2019/02/22 01:22:22 by dromansk         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ls.h"

/*
** not perfect but Imma do either 30 width or longest name plus 2
*/

void	print_cols(t_direct **columns, int len)
{
	int			i;

	i = -1;
	while (columns[++i])
	{
		if (columns[i])
		{
			print_type(columns[i], len);
			columns[i] = columns[i]->next;
		}
		if (!columns[i + 1])
		{
			ft_putchar('\n');
			if (columns[0])
				i = -1;
			else
				return ;
		}
	}
}

t_direct	*dir_split(t_direct **dir, int len)
{
	t_direct	*curr;
	t_direct	*tmp;
	t_direct	*cut;
	
	curr = *dir;
	tmp = curr;
	while (--len && tmp->next)
		tmp = tmp->next;
	cut = tmp->next;
	tmp->next = NULL;
	*dir = cut;
	return (curr);
}

void		split_dirs(t_direct *d, int cols, int count, int len)
{
	t_direct	**columns;

	int			list_len;
	int			i;

	i = -1;
	list_len = count / cols;
	columns = malloc(sizeof(t_direct *) * cols + 1);
	columns[cols] = NULL;
	while (++i < cols)
		columns[i] = dir_split(&d, list_len);
	print_cols(columns, len);
	i = -1;
	while (columns[++i])
		del_dir(columns[i]);
	free(columns);
}

void		column_count(t_direct *d, int len, int count)
{
	struct winsize	ws;
	int				size;
	int				cols;
	
	cols = 1;
	ioctl(1, TIOCGWINSZ, &ws);
	size = ws.ws_col;
	if (size > len)
		cols = size / len;
	split_dirs(d, cols, count, len);
}

void		print_col(t_direct *d)
{
	t_direct	*start;
	int			len;
	int			cmp;
	int			count;
	len = 16;
	count = 0;
	start = d;
	while (d)
	{
		count++;
		cmp = ft_strlen(d->name);
		if (len == 16)
		{
			len = cmp > len ? 30 : len;
		}
		else
			len = cmp > len ? cmp : len;
		d = d->next;
	}
	column_count(start, len, count);
}
